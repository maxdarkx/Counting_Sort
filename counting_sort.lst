(0000) 3000  0011000000000000 (   1)                 .ORIG x3000
(3000) 2C76  0010110001110110 (   3)                 LD    R6 data_address
(3001) 1BA0  0001101110100000 (   5)                 ADD   R5 R6 #0
(3002) 48BB  0100100010111011 (   6)                 JSR   cant_data
(3003) 2878  0010100001111000 (   7)                 LD    R4 cant
(3004) 6540  0110010101000000 (  10)                 LDR   R2 R5 #0
(3005) 16A0  0001011010100000 (  11)                 ADD   R3 R2 #0
(3006) 96FF  1001011011111111 (  12)                 NOT   R3 R3
(3007) 16E1  0001011011100001 (  13)                 ADD   R3 R3 #1
(3008) 1920  0001100100100000 (  15) max_val         ADD   R4 R4 #0
(3009) 0409  0000010000001001 (  16)                 BRZ   fin_max
(300A) 6340  0110001101000000 (  17)                 LDR   R1 R5 #0
(300B) 1B61  0001101101100001 (  18)                 ADD   R5 R5 #1
(300C) 193F  0001100100111111 (  19)                 ADD   R4 R4 #-1
(300D) 1043  0001000001000011 (  20)                 ADD   R0 R1 R3
(300E) 0DF9  0000110111111001 (  21)                 BRNZ  max_val
(300F) 1460  0001010001100000 (  23)                 ADD   R2 R1 #0
(3010) 96BF  1001011010111111 (  24)                 NOT   R3 R2
(3011) 16E1  0001011011100001 (  25)                 ADD   R3 R3 #1
(3012) 0FF5  0000111111110101 (  27)                 BRNZP max_val
(3013) 3469  0011010001101001 (  28) fin_max         ST    R2 max
(3014) 1BA0  0001101110100000 (  30)                 ADD   R5 R6 #0
(3015) 2866  0010100001100110 (  31)                 LD    R4 cant
(3016) 1920  0001100100100000 (  34) min_val         ADD   R4 R4 #0
(3017) 0409  0000010000001001 (  35)                 BRZ   fin_min
(3018) 6340  0110001101000000 (  36)                 LDR   R1 R5 #0
(3019) 1B61  0001101101100001 (  37)                 ADD   R5 R5 #1
(301A) 193F  0001100100111111 (  38)                 ADD   R4 R4 #-1
(301B) 1043  0001000001000011 (  39)                 ADD   R0 R1 R3
(301C) 03F9  0000001111111001 (  40)                 BRP   min_val
(301D) 1460  0001010001100000 (  42)                 ADD   R2 R1 #0
(301E) 96BF  1001011010111111 (  43)                 NOT   R3 R2
(301F) 16E1  0001011011100001 (  44)                 ADD   R3 R3 #1
(3020) 0FF5  0000111111110101 (  46)                 BRNZP min_val
(3021) 345C  0011010001011100 (  47) fin_min         ST    R2 min
(3022) 285B  0010100001011011 (  52)                 LD    R4 min
(3023) 0202  0000001000000010 (  53)                 BRP   max_pos
(3024) 993F  1001100100111111 (  54)                 NOT   R4 R4
(3025) 1921  0001100100100001 (  55)                 ADD   R4 R4 #1
(3026) 2A56  0010101001010110 (  57) max_pos         LD    R5 max
(3027) 0202  0000001000000010 (  58)                 BRP   min_pos
(3028) 9B7F  1001101101111111 (  59)                 NOT   R5 R5
(3029) 1B61  0001101101100001 (  60)                 ADD   R5 R5 #1
(302A) 1744  0001011101000100 (  62) min_pos         ADD   R3 R5 R4
(302B) 3653  0011011001010011 (  64)                 ST    R3 tam
(302C) 1CE0  0001110011100000 (  65)                 ADD   R6 R3 #0
(302D) 264E  0010011001001110 (  66)                 LD    R3 cant
(302E) 16E1  0001011011100001 (  67)                 ADD   R3 R3 #1
(302F) 2A4E  0010101001001110 (  68)                 LD    R5 min
(3030) 2847  0010100001000111 (  69)                 LD    R4 order_vector
(3031) 2245  0010001001000101 (  71)                 LD    R1 data_address
(3032) 9B7F  1001101101111111 (  72)                 NOT   R5 R5
(3033) 1B61  0001101101100001 (  73)                 ADD   R5 R5 #1
(3034) 5FE0  0101111111100000 (  74)                 AND   R7 R7 #0
(3035) 16FF  0001011011111111 (  76) found           ADD   R3 R3 #-1
(3036) 0C06  0000110000000110 (  77)                 BRNZ  round
(3037) 6440  0110010001000000 (  78)                 LDR   R2 R1 #0
(3038) 1261  0001001001100001 (  79)                 ADD   R1 R1 #1
(3039) 1485  0001010010000101 (  80)                 ADD   R2 R2 R5
(303A) 0BFA  0000101111111010 (  81)                 BRNP  found
(303B) 1FE1  0001111111100001 (  82)                 ADD   R7 R7 #1
(303C) 0FF8  0000111111111000 (  83)                 BRNZP found
(303D) 7F00  0111111100000000 (  85) round           STR   R7 R4 #0
(303E) 1921  0001100100100001 (  86)                 ADD   R4 R4 #1
(303F) 2237  0010001000110111 (  87)                 LD    R1 data_address
(3040) 263B  0010011000111011 (  88)                 LD    R3 cant
(3041) 16E1  0001011011100001 (  89)                 ADD   R3 R3 #1
(3042) 9B7F  1001101101111111 (  92)                 NOT   R5 R5
(3043) 1B61  0001101101100001 (  93)                 ADD   R5 R5 #1
(3044) 1B61  0001101101100001 (  94)                 ADD   R5 R5 #1
(3045) 9B7F  1001101101111111 (  95)                 NOT   R5 R5
(3046) 1B61  0001101101100001 (  96)                 ADD   R5 R5 #1
(3047) 5FE0  0101111111100000 (  98)                 AND   R7 R7 #0
(3048) 1DBF  0001110110111111 (  99)                 ADD   R6 R6 #-1
(3049) 07EB  0000011111101011 ( 100)                 BRZP  found
(304A) 2C2E  0010110000101110 ( 109)                 LD    R6 ordered_vector
(304B) 2A2C  0010101000101100 ( 110)                 LD    R5 order_vector
(304C) 2832  0010100000110010 ( 111)                 LD    R4 tam
(304D) 262E  0010011000101110 ( 112)                 LD    R3 cant
(304E) 242F  0010010000101111 ( 113)                 LD    R2 min
(304F) 6340  0110001101000000 ( 119) end_order_vector LDR   R1 R5 #0
(3050) 0C04  0000110000000100 ( 120)                 BRNZ  not_found1
(3051) 7580  0111010110000000 ( 122) found1          STR   R2 R6 #0
(3052) 1DA1  0001110110100001 ( 123)                 ADD   R6 R6 #1
(3053) 127F  0001001001111111 ( 124)                 ADD   R1 R1 #-1
(3054) 03FC  0000001111111100 ( 125)                 BRP   found1
(3055) 1B61  0001101101100001 ( 127) not_found1      ADD   R5 R5 #1
(3056) 14A1  0001010010100001 ( 128)                 ADD   R2 R2 #1
(3057) 193F  0001100100111111 ( 129)                 ADD   R4 R4 #-1
(3058) 07F6  0000011111110110 ( 130)                 BRZP  end_order_vector
(3059) 2C1F  0010110000011111 ( 167)                 LD    R6 ordered_vector
(305A) 5020  0101000000100000 ( 168)                 AND   R0 R0 #0
(305B) 4835  0100100000110101 ( 170)                 JSR   store_reset
(305C) 56E0  0101011011100000 ( 172)                 AND   R3 R3 #0
(305D) 6380  0110001110000000 ( 173) ascii_c         LDR   R1 R6 #0
(305E) 0605  0000011000000101 ( 174)                 BRZP  asciipos
(305F) 927F  1001001001111111 ( 176)                 NOT   R1 R1
(3060) 1261  0001001001100001 ( 177)                 ADD   R1 R1 #1
(3061) 2028  0010000000101000 ( 178)                 LD    R0 ascii_minus
(3062) E41D  1110010000011101 ( 182)                 LEA   R2 asciiConvTemp
(3063) 7080  0111000010000000 ( 183)                 STR   R0 R2 #0
(3064) 54A0  0101010010100000 ( 186) asciipos        AND   R2 R2 #0
(3065) 14AA  0001010010101010 ( 187)                 ADD   R2 R2 #10
(3066) 4870  0100100001110000 ( 188)                 JSR   division
(3067) 1220  0001001000100000 ( 189)                 ADD   R1 R0 #0
(3068) 5020  0101000000100000 ( 190)                 AND   R0 R0 #0
(3069) 281F  0010100000011111 ( 192)                 LD    R4 ascii_dd
(306A) 1004  0001000000000100 ( 193)                 ADD   R0 R0 R4
(306B) 1003  0001000000000011 ( 194)                 ADD   R0 R0 R3
(306C) 481F  0100100000011111 ( 198)                 JSR   store_temp
(306D) 1260  0001001001100000 ( 201)                 ADD   R1 R1 #0
(306E) 03F5  0000001111110101 ( 202)                 BRP   asciipos
(306F) 4832  0100100000110010 ( 207)                 JSR   store_save
(3070) 4820  0100100000100000 ( 208)                 JSR   store_reset
(3071) 1DA1  0001110110100001 ( 211)                 ADD   R6 R6 #1
(3072) 6B80  0110101110000000 ( 212)                 LDR   R5 R6 #0
(3073) 0BE9  0000101111101001 ( 213)                 BRNP  ascii_c
(3074) 2005  0010000000000101 ( 214)                 LD    R0 ascii_vector
(3075) F022  1111000000100010 ( 215)                 TRAP  x22
(3076) F025  1111000000100101 ( 221)                 TRAP  x25
(3077) 3500  0011010100000000 ( 223) data_address    .FILL x3500
(3078) 5000  0101000000000000 ( 224) order_vector    .FILL x5000
(3079) 8000  1000000000000000 ( 225) ordered_vector  .FILL x8000
(307A) A000  1010000000000000 ( 226) ascii_vector    .FILL xA000
(307B) A000  1010000000000000 ( 227) ascii_pointer   .FILL xA000
(307C) 000F  0000000000001111 ( 228) cant            .FILL x000F
(307D) 0000  0000000000000000 ( 230) max             .FILL x0000
(307E) 0000  0000000000000000 ( 231) min             .FILL x0000
(307F) 0000  0000000000000000 ( 232) tam             .FILL x0000
(3080) 0000  0000000000000000 ( 233) asciiConvTemp   .FILL x0000
(3081) 0000  0000000000000000 ( 233)                 .FILL x0000
(3082) 0000  0000000000000000 ( 233)                 .FILL x0000
(3083) 0000  0000000000000000 ( 233)                 .FILL x0000
(3084) 0000  0000000000000000 ( 233)                 .FILL x0000
(3085) 0000  0000000000000000 ( 233)                 .FILL x0000
(3086) 0000  0000000000000000 ( 233)                 .FILL x0000
(3087) 0000  0000000000000000 ( 233)                 .FILL x0000
(3088) 3080  0011000010000000 ( 233) ascii_temp_pointer .FILL x3080
(3089) 0030  0000000000110000 ( 234) ascii_dd        .FILL x0030
(308A) 002D  0000000000101101 ( 235) ascii_minus     .FILL x002D
(308B) 0020  0000000000100000 ( 236) space           .FILL x0020
(308C) 25FB  0010010111111011 ( 241) store_temp      LD    R2 ascii_temp_pointer
(308D) 7080  0111000010000000 ( 242)                 STR   R0 R2 #0
(308E) 14BF  0001010010111111 ( 243)                 ADD   R2 R2 #-1
(308F) 35F8  0011010111111000 ( 244)                 ST    R2 ascii_temp_pointer
(3090) C1C0  1100000111000000 ( 245)                 RET   
(3091) 300E  0011000000001110 ( 251) store_reset     ST    R0 tmp
(3092) 320E  0011001000001110 ( 252)                 ST    R1 tmp2
(3093) 5020  0101000000100000 ( 254)                 AND   R0 R0 #0
(3094) 5260  0101001001100000 ( 255)                 AND   R1 R1 #0
(3095) 1267  0001001001100111 ( 256)                 ADD   R1 R1 #7
(3096) E5E9  1110010111101001 ( 258)                 LEA   R2 asciiConvTemp
(3097) 7080  0111000010000000 ( 259) delete          STR   R0 R2 #0
(3098) 14A1  0001010010100001 ( 260)                 ADD   R2 R2 #1
(3099) 127F  0001001001111111 ( 261)                 ADD   R1 R1 #-1
(309A) 07FC  0000011111111100 ( 262)                 BRZP  delete
(309B) 14BF  0001010010111111 ( 263)                 ADD   R2 R2 #-1
(309C) 35EB  0011010111101011 ( 264)                 ST    R2 ascii_temp_pointer
(309D) 2002  0010000000000010 ( 265)                 LD    R0 tmp
(309E) 2202  0010001000000010 ( 266)                 LD    R1 tmp2
(309F) C1C0  1100000111000000 ( 267)                 RET   
(30A0) 0000  0000000000000000 ( 270) tmp             .FILL x0000
(30A1) 0000  0000000000000000 ( 273) tmp2            .FILL x0000
(30A2) 3017  0011000000010111 ( 273) store_save      ST    R0 temp_save
(30A3) 3217  0011001000010111 ( 274)                 ST    R1 temp_save1
(30A4) 3417  0011010000010111 ( 275)                 ST    R2 temp_save2
(30A5) 3617  0011011000010111 ( 276)                 ST    R3 temp_save3
(30A6) 56E0  0101011011100000 ( 277)                 AND   R3 R3 #0
(30A7) 16E7  0001011011100111 ( 278)                 ADD   R3 R3 #7
(30A8) E5D7  1110010111010111 ( 280)                 LEA   R2 asciiConvTemp
(30A9) 23D1  0010001111010001 ( 281)                 LD    R1 ascii_pointer
(30AA) 6080  0110000010000000 ( 282) save            LDR   R0 R2 #0
(30AB) 0402  0000010000000010 ( 283)                 BRZ   not_save
(30AC) 7040  0111000001000000 ( 284)                 STR   R0 R1 #0
(30AD) 1261  0001001001100001 ( 285)                 ADD   R1 R1 #1
(30AE) 14A1  0001010010100001 ( 287) not_save        ADD   R2 R2 #1
(30AF) 16FF  0001011011111111 ( 288)                 ADD   R3 R3 #-1
(30B0) 07F9  0000011111111001 ( 289)                 BRZP  save
(30B1) 21D9  0010000111011001 ( 290)                 LD    R0 space
(30B2) 7040  0111000001000000 ( 291)                 STR   R0 R1 #0
(30B3) 1261  0001001001100001 ( 292)                 ADD   R1 R1 #1
(30B4) 33C6  0011001111000110 ( 293)                 ST    R1 ascii_pointer
(30B5) 2004  0010000000000100 ( 295)                 LD    R0 temp_save
(30B6) 2204  0010001000000100 ( 296)                 LD    R1 temp_save1
(30B7) 2404  0010010000000100 ( 297)                 LD    R2 temp_save2
(30B8) 2404  0010010000000100 ( 298)                 LD    R2 temp_save3
(30B9) C1C0  1100000111000000 ( 300)                 RET   
(30BA) 0000  0000000000000000 ( 302) temp_save       .FILL x0000
(30BB) 0000  0000000000000000 ( 303) temp_save1      .FILL x0000
(30BC) 0000  0000000000000000 ( 304) temp_save2      .FILL x0000
(30BD) 0000  0000000000000000 ( 306) temp_save3      .FILL x0000
(30BE) 3013  0011000000010011 ( 306) cant_data       ST    R0 temp_cant
(30BF) 3213  0011001000010011 ( 307)                 ST    R1 temp_cant2
(30C0) 3413  0011010000010011 ( 308)                 ST    R2 temp_cant3
(30C1) 3A13  0011101000010011 ( 309)                 ST    R5 temp_cant5
(30C2) 2413  0010010000010011 ( 310)                 LD    R2 centinela
(30C3) 94BF  1001010010111111 ( 311)                 NOT   R2 R2
(30C4) 14A1  0001010010100001 ( 312)                 ADD   R2 R2 #1
(30C5) 5260  0101001001100000 ( 315)                 AND   R1 R1 #0
(30C6) 127F  0001001001111111 ( 316)                 ADD   R1 R1 #-1
(30C7) 1261  0001001001100001 ( 318) count           ADD   R1 R1 #1
(30C8) 6140  0110000101000000 ( 319)                 LDR   R0 R5 #0
(30C9) 1B61  0001101101100001 ( 320)                 ADD   R5 R5 #1
(30CA) 1002  0001000000000010 ( 321)                 ADD   R0 R0 R2
(30CB) 0BFB  0000101111111011 ( 322)                 BRNP  count
(30CC) 33AF  0011001110101111 ( 323)                 ST    R1 cant
(30CD) 2205  0010001000000101 ( 325)                 LD    R1 temp_cant2
(30CE) 2003  0010000000000011 ( 326)                 LD    R0 temp_cant
(30CF) 2404  0010010000000100 ( 327)                 LD    R2 temp_cant3
(30D0) 2A04  0010101000000100 ( 328)                 LD    R5 temp_cant5
(30D1) C1C0  1100000111000000 ( 329)                 RET   
(30D2) 0000  0000000000000000 ( 331) temp_cant       .FILL x0000
(30D3) 0000  0000000000000000 ( 332) temp_cant2      .FILL x0000
(30D4) 0000  0000000000000000 ( 333) temp_cant3      .FILL x0000
(30D5) 0000  0000000000000000 ( 334) temp_cant5      .FILL x0000
(30D6) 8000  1000000000000000 ( 334) centinela       .FILL x8000
(30D7) 5020  0101000000100000 ( 337) division        AND   R0 R0 #0
(30D8) 56E0  0101011011100000 ( 338)                 AND   R3 R3 #0
(30D9) 3E18  0011111000011000 ( 339)                 ST    R7 divsave
(30DA) EE17  1110111000010111 ( 340)                 LEA   R7 divsave
(30DB) 73C1  0111001111000001 ( 341)                 STR   R1 R7 #1
(30DC) 79C2  0111100111000010 ( 342)                 STR   R4 R7 #2
(30DD) 7BC3  0111101111000011 ( 343)                 STR   R5 R7 #3
(30DE) 7DC4  0111110111000100 ( 344)                 STR   R6 R7 #4
(30DF) 94BF  1001010010111111 ( 346)                 NOT   R2 R2
(30E0) 14A1  0001010010100001 ( 347)                 ADD   R2 R2 #1
(30E1) 5920  0101100100100000 ( 348)                 AND   R4 R4 #0
(30E2) 1242  0001001001000010 ( 350) div_op          ADD   R1 R1 R2
(30E3) 0802  0000100000000010 ( 351)                 BRN   div_op_out
(30E4) 1921  0001100100100001 ( 353)                 ADD   R4 R4 #1
(30E5) 0FFC  0000111111111100 ( 354)                 BRNZP div_op
(30E6) 1120  0001000100100000 ( 357) div_op_out      ADD   R0 R4 #0
(30E7) 94BF  1001010010111111 ( 358)                 NOT   R2 R2
(30E8) 14A1  0001010010100001 ( 359)                 ADD   R2 R2 #1
(30E9) 1660  0001011001100000 ( 360)                 ADD   R3 R1 #0
(30EA) 0601  0000011000000001 ( 361)                 BRZP  neg
(30EB) 16C2  0001011011000010 ( 362)                 ADD   R3 R3 R2
(30EC) 63C1  0110001111000001 ( 363) neg             LDR   R1 R7 #1
(30ED) 69C2  0110100111000010 ( 364)                 LDR   R4 R7 #2
(30EE) 6BC3  0110101111000011 ( 365)                 LDR   R5 R7 #3
(30EF) 6DC4  0110110111000100 ( 366)                 LDR   R6 R7 #4
(30F0) 6FC0  0110111111000000 ( 367)                 LDR   R7 R7 #0
(30F1) C1C0  1100000111000000 ( 368)                 RET   
(30F2) 0000  0000000000000000 ( 372) divsave         .FILL x0000
(30F3) 0000  0000000000000000 ( 372)                 .FILL x0000
(30F4) 0000  0000000000000000 ( 372)                 .FILL x0000
(30F5) 0000  0000000000000000 ( 372)                 .FILL x0000
(30F6) 0000  0000000000000000 ( 372)                 .FILL x0000
